###############################################################################
#
# IAR ANSI C/C++ Compiler V8.22.1.15669/W32 for ARM       20/Sep/2023  21:09:36
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\project_test\user\main.c
#    Command line =  
#        -f C:\Users\pnu8\AppData\Local\Temp\EW1DFD.tmp
#        (E:\project_test\user\main.c -D USE_STDPERIPH_DRIVER -D STM32F10X_CL
#        -lC E:\project_test\Debug\List -o E:\project_test\Debug\Obj --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M3 -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\project_test\libraries\CMSIS\DeviceSupport\ -I
#        E:\project_test\libraries\CMSIS\DeviceSupport\Startup\ -I
#        E:\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\inc\ -I
#        E:\project_test\libraries\STM32F10x_StdPeriph_Driver_v3.5\src\ -I
#        E:\project_test\user\ -I E:\project_test\user\inc\ -Ol -I "C:\Program
#        Files (x86)\IAR Systems\Embedded Workbench
#        8.0\arm\CMSIS\Core\Include\" -I "C:\Program Files (x86)\IAR
#        Systems\Embedded Workbench 8.0\arm\CMSIS\DSP\Include\")
#    Locale       =  C
#    List file    =  E:\project_test\Debug\List\main.lst
#    Object file  =  E:\project_test\Debug\Obj\main.o
#
###############################################################################

E:\project_test\user\main.c
      1          #include "stm32f10x.h"
      2          
      3          #define OUR_RCC (*(volatile unsigned int *)0x40021018)
      4          #define LED (*(volatile unsigned int *)0x40011400)
      5          #define KEY1 (*(volatile unsigned int *)0x40011000)
      6          #define KEY2 (*(volatile unsigned int *)0x40010c04)
      7          #define KEY3 (*(volatile unsigned int *)0x40011004)
      8          #define KEY4 (*(volatile unsigned int *)0x40010800)
      9          
     10          #define INPUT_KEY1 (*(volatile unsigned int *)0x40011008)
     11          #define INPUT_KEY2 (*(volatile unsigned int *)0x40010c08)
     12          #define INPUT_KEY3 (*(volatile unsigned int *)0x40011008)
     13          #define INPUT_KEY4 (*(volatile unsigned int *)0x40010808)
     14          
     15          #define OUTPUT_LED (*(volatile unsigned int *)0x40011410)
     16          

   \                                 In section .text, align 4, keep-with-next
     17          int main(void){
     18            
     19            // clock enable
     20            OUR_RCC |= 0x3C;
   \                     main: (+1)
   \   00000000   0x4836             LDR.N    R0,??main_0      ;; 0x40021018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x003C      ORRS     R0,R0,#0x3C
   \   00000008   0x4934             LDR.N    R1,??main_0      ;; 0x40021018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     21            
     22            //Initializing
     23            LED &= 0x00000000;
   \   0000000C   0x4834             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x4933             LDR.N    R1,??main_0+0x4  ;; 0x40011400
   \   00000014   0x6008             STR      R0,[R1, #+0]
     24            KEY1 &= 0x00000000;
   \   00000016   0x4833             LDR.N    R0,??main_0+0x8  ;; 0x40011000
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x2000             MOVS     R0,#+0
   \   0000001C   0x4931             LDR.N    R1,??main_0+0x8  ;; 0x40011000
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     25            KEY2 &= 0x00000000;
   \   00000020   0x4831             LDR.N    R0,??main_0+0xC  ;; 0x40010c04
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2000             MOVS     R0,#+0
   \   00000026   0x4930             LDR.N    R1,??main_0+0xC  ;; 0x40010c04
   \   00000028   0x6008             STR      R0,[R1, #+0]
     26            KEY3 &= 0x00000000;
   \   0000002A   0x4830             LDR.N    R0,??main_0+0x10  ;; 0x40011004
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x2000             MOVS     R0,#+0
   \   00000030   0x492E             LDR.N    R1,??main_0+0x10  ;; 0x40011004
   \   00000032   0x6008             STR      R0,[R1, #+0]
     27            KEY4 &= 0x00000000;
   \   00000034   0x482E             LDR.N    R0,??main_0+0x14  ;; 0x40010800
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x492D             LDR.N    R1,??main_0+0x14  ;; 0x40010800
   \   0000003C   0x6008             STR      R0,[R1, #+0]
     28            OUTPUT_LED &= 0x00000000;  
   \   0000003E   0x482D             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x2000             MOVS     R0,#+0
   \   00000044   0x492B             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000046   0x6008             STR      R0,[R1, #+0]
     29            
     30            // mode setting
     31            LED |= 0x30033300;
   \   00000048   0x4825             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0x482A             LDR.N    R0,??main_0+0x1C  ;; 0x30033300
   \   0000004E   0x4301             ORRS     R1,R0,R1
   \   00000050   0x4823             LDR.N    R0,??main_0+0x4  ;; 0x40011400
   \   00000052   0x6001             STR      R1,[R0, #+0]
     32            KEY1 |= 0x00080000;
   \   00000054   0x4823             LDR.N    R0,??main_0+0x8  ;; 0x40011000
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x2000      ORRS     R0,R0,#0x80000
   \   0000005C   0x4921             LDR.N    R1,??main_0+0x8  ;; 0x40011000
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     33            KEY2 |= 0x00000800;
   \   00000060   0x4821             LDR.N    R0,??main_0+0xC  ;; 0x40010c04
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000068   0x491F             LDR.N    R1,??main_0+0xC  ;; 0x40010c04
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     34            KEY3 |= 0x00800000;
   \   0000006C   0x481F             LDR.N    R0,??main_0+0x10  ;; 0x40011004
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000074   0x491D             LDR.N    R1,??main_0+0x10  ;; 0x40011004
   \   00000076   0x6008             STR      R0,[R1, #+0]
     35            KEY4 |= 0x00000008;
   \   00000078   0x481D             LDR.N    R0,??main_0+0x14  ;; 0x40010800
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000080   0x491B             LDR.N    R1,??main_0+0x14  ;; 0x40010800
   \   00000082   0x6008             STR      R0,[R1, #+0]
   \   00000084   0xE005             B.N      ??main_1
     36            
     37            while(1){
     38              if (!(INPUT_KEY1 & 0x0010)) {
     39                OUTPUT_LED |= 0x000C0000;
     40              } 
     41              else if (!(INPUT_KEY2 & 0x0400)) {
     42                OUTPUT_LED |= 0x0000000C;
     43              } 
     44              if (!(INPUT_KEY3 & 0x2000)) {
     45                OUTPUT_LED |= 0x00900000;
   \                     ??main_2: (+1)
   \   00000086   0x481B             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0xF450 0x0010      ORRS     R0,R0,#0x900000
   \   0000008E   0x4919             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   00000090   0x6008             STR      R0,[R1, #+0]
     46              } 
   \                     ??main_1: (+1)
   \   00000092   0x481A             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x06C0             LSLS     R0,R0,#+27
   \   00000098   0xD406             BMI.N    ??main_3
   \   0000009A   0x4816             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF450 0x2040      ORRS     R0,R0,#0xC0000
   \   000000A2   0x4914             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000A4   0x6008             STR      R0,[R1, #+0]
   \   000000A6   0xE009             B.N      ??main_4
   \                     ??main_3: (+1)
   \   000000A8   0x4815             LDR.N    R0,??main_0+0x24  ;; 0x40010c08
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x0540             LSLS     R0,R0,#+21
   \   000000AE   0xD405             BMI.N    ??main_4
   \   000000B0   0x4810             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x000C      ORRS     R0,R0,#0xC
   \   000000B8   0x490E             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000BA   0x6008             STR      R0,[R1, #+0]
   \                     ??main_4: (+1)
   \   000000BC   0x480F             LDR.N    R0,??main_0+0x20  ;; 0x40011008
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x0480             LSLS     R0,R0,#+18
   \   000000C2   0xD5E0             BPL.N    ??main_2
     47              else if (!(INPUT_KEY4 & 0x0001)) {
   \   000000C4   0x480F             LDR.N    R0,??main_0+0x28  ;; 0x40010808
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x07C0             LSLS     R0,R0,#+31
   \   000000CA   0xD4E2             BMI.N    ??main_1
     48                OUTPUT_LED |= 0x00000090;
   \   000000CC   0x4809             LDR.N    R0,??main_0+0x18  ;; 0x40011410
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0xF050 0x0090      ORRS     R0,R0,#0x90
   \   000000D4   0x4907             LDR.N    R1,??main_0+0x18  ;; 0x40011410
   \   000000D6   0x6008             STR      R0,[R1, #+0]
   \   000000D8   0xE7DB             B.N      ??main_1
   \   000000DA   0xBF00             Nop      
   \                     ??main_0:
   \   000000DC   0x40021018         DC32     0x40021018
   \   000000E0   0x40011400         DC32     0x40011400
   \   000000E4   0x40011000         DC32     0x40011000
   \   000000E8   0x40010C04         DC32     0x40010c04
   \   000000EC   0x40011004         DC32     0x40011004
   \   000000F0   0x40010800         DC32     0x40010800
   \   000000F4   0x40011410         DC32     0x40011410
   \   000000F8   0x30033300         DC32     0x30033300
   \   000000FC   0x40011008         DC32     0x40011008
   \   00000100   0x40010C08         DC32     0x40010c08
   \   00000104   0x40010808         DC32     0x40010808
     49              }
     50            }
     51            
     52            
     53            return 0;
                   ^
Warning[Pe111]: statement is unreachable
     54          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   main


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     264  main

 
 264 bytes in section .text
 
 264 bytes of CODE memory

Errors: none
Warnings: 1
